// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `FaceAlg.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package FaceAlg;

public class RecogResult implements java.lang.Cloneable, java.io.Serializable
{
    public String faceId;

    public float similarity;

    public RecogResult()
    {
        faceId = "";
    }

    public RecogResult(String faceId, float similarity)
    {
        this.faceId = faceId;
        this.similarity = similarity;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        RecogResult _r = null;
        if(rhs instanceof RecogResult)
        {
            _r = (RecogResult)rhs;
        }

        if(_r != null)
        {
            if(faceId != _r.faceId)
            {
                if(faceId == null || _r.faceId == null || !faceId.equals(_r.faceId))
                {
                    return false;
                }
            }
            if(similarity != _r.similarity)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::FaceAlg::RecogResult");
        __h = IceInternal.HashUtil.hashAdd(__h, faceId);
        __h = IceInternal.HashUtil.hashAdd(__h, similarity);
        return __h;
    }

    public RecogResult
    clone()
    {
        RecogResult c = null;
        try
        {
            c = (RecogResult)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(faceId);
        __os.writeFloat(similarity);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        faceId = __is.readString();
        similarity = __is.readFloat();
    }

    static public void
    __write(IceInternal.BasicStream __os, RecogResult __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public RecogResult
    __read(IceInternal.BasicStream __is, RecogResult __v)
    {
        if(__v == null)
        {
             __v = new RecogResult();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final RecogResult __nullMarshalValue = new RecogResult();

    public static final long serialVersionUID = -1917450756L;
}
